你需要在每台机器上安装以下的软件包：
kubeadm：用来初始化集群的指令。
kubelet：在集群中的每个节点上用来启动 Pod 和容器等。
kubectl：用来与集群通信的命令行工具。

# 关闭swap分区
swapoff -a
sed -i '/swap/ s/^/#/g' /etc/fstab

# 禁用selinux
# 永久关闭
sed -i 's/enforcing/disabled/' /etc/selinux/config
# 临时关闭
setenforce 0


配置内核参数，将桥接的IPv4流量传递到iptables的链
cat > /etc/sysctl.d/k8s.conf <<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables  = 1
net.ipv4.ip_forward                 = 1
EOF
sysctl --system

添加阿里kubernetes源
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF


# 安装docker和cri-dockerd（所有节点执行）
# 安装docker及其依赖库
yum install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
# 启动docker
systemctl start docker
# 设置docker开机启动
systemctl enable docker
# 验证
systemctl status docker


# 安装cri-dockerd,k8s 1.24版本后需要使用cri-dockerd和docker通信
cd /srv/
wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.4/cri-dockerd-0.3.4-3.el7.x86_64.rpm
# 安装
rpm -ivh cri-dockerd-0.3.4-3.el7.x86_64.rpm

# 设置镜像加速
tee /etc/docker/daemon.json <<-'EOF'
{
  "registry-mirrors": ["https://c12xt3od.mirror.aliyuncs.com"]
}
EOF

# 修改配置文件
vi /usr/lib/systemd/system/cri-docker.service
改为	ExecStart=/usr/bin/cri-dockerd --network-plugin=cni --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.7

# 重载系统守护进程
sudo systemctl daemon-reload
# 设置cri-dockerd自启动
sudo systemctl enable cri-docker.socket cri-docker
# 启动cri-dockerd
sudo systemctl start cri-docker.socket cri-docker
# 检查Docker组件状态
sudo systemctl status docker cir-docker.socket cri-docker

# 安装runc（所有节点执行）(暂时未知作用)
# 下载 runc.amd64  
wget https://github.com/opencontainers/runc/releases/download/v1.1.9/runc.amd64
# 安装
install -m 755 runc.amd64 /usr/local/bin/runc
# 验证
runc -v

yum install kubectl kubelet kubeadm
systemctl enable kubelet

这里不用启动kubelet  会报错

# 执行 kubeadm  init 命令
kubeadm init  --node-name=k8s-master --image-repository=registry.aliyuncs.com/google_containers --cri-socket=unix:///var/run/cri-dockerd.sock --apiserver-advertise-address=192.168.255.140 --pod-network-cidr=10.244.0.0/16 --service-cidr=10.96.0.0/12

# 需要修改的参数
	--apiserver-advertise-address # 指定 API 服务器的广告地址、我设置为master节点的ip
	
# 初始化成功后运行下面的命令	
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# master节点执行 配置文件的复制（为了在node节点可以使用kubectl相关命令）
scp /etc/kubernetes/admin.conf 192.168.255.141:/etc/kubernetes/
scp /etc/kubernetes/admin.conf 192.168.255.142:/etc/kubernetes/


#初始化k8s集群
#kubeadm init --kubernetes-version=1.18.0  \
#--apiserver-advertise-address=192.168.122.21   \
#--image-repository registry.aliyuncs.com/google_containers  \
#--service-cidr=10.10.0.0/16 --pod-network-cidr=10.122.0.0/16

###k8s 常用命令
k8s 还原命令
kubeadm reset  --cri-socket=unix:///var/run/cri-dockerd.sock  # (还原和初始化要加这个socket)

在master主机上查看node节点机器:
[root@ct7-1 ~]# kubectl get nodes 
NAME    STATUS   ROLES                  AGE    VERSION
ct7-1   Ready    control-plane,master   3d3h   v1.23.4
ct7-2   Ready    <none>                 3d     v1.23.4
ct7-4   Ready    <none>                 3d     v1.23.4

查看pods
[root@ct7-1 ~]# kubectl get pods -n kube-system
NAME                            READY   STATUS    RESTARTS        AGE
coredns-6d8c4cb4d-jklwl         1/1     Running   1 (6h21m ago)   3d3h
coredns-6d8c4cb4d-m5k4n         1/1     Running   1 (6h21m ago)   3d3h
etcd-ct7-1                      1/1     Running   1 (6h21m ago)   3d3h
kube-apiserver-ct7-1            1/1     Running   1 (6h21m ago)   3d3h
kube-controller-manager-ct7-1   1/1     Running   1 (6h21m ago)   3d3h
kube-flannel-ds-8gddc           1/1     Running   1 (6h20m ago)   3d
kube-flannel-ds-g86t4           1/1     Running   1 (6h21m ago)   3d
kube-flannel-ds-x9s7d           1/1     Running   1 (6h21m ago)   3d2h
kube-proxy-hnp5k                1/1     Running   1 (6h20m ago)   3d
kube-proxy-m4jgc                1/1     Running   1 (6h21m ago)   3d3h
kube-proxy-r8jzm                1/1     Running   1 (6h21m ago)   3d
kube-scheduler-ct7-1            1/1     Running   1 (6h21m ago)   3d3h

查看服务
[root@ct7-1 ~]# kubectl get svc -o wide
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)        AGE    SELECTOR
kubernetes   ClusterIP   10.1.0.1     <none>        443/TCP        3d3h   <none>
nginx        NodePort    10.1.183.2   <none>        80:30342/TCP   3d     app=nginx

# master节点执行 配置文件的复制（为了在node节点可以使用kubectl相关命令）
scp /etc/kubernetes/admin.conf 192.168.31.244:/etc/kubernetes/
echo "export KUBECONFIG=/etc/kubernetes/admin.conf" >> /etc/profile
source  /etc/profile

# node加入集群 
kubeadm join 192.168.31.236:6443 --token o2550k.2vx4w7lzr1im44z7 \
    --discovery-token-ca-cert-hash sha256:2f9f0e787e9cf7ebfa770c132e0df735c85e925392cc8cc399e1a697a0badbfd --cri-socket unix:///var/run/cri-dockerd.sock

# node 安装网络插件
kubectl  apply -f /root/rice01/k8s/kube-flannel.yml

#查看加入集群命令 master执行
[root@ct7-2 ~]# kubeadm token create --print-join-command
kubeadm join 192.168.31.236:6443 --token o2550k.2vx4w7lzr1im44z7 \
    --discovery-token-ca-cert-hash sha256:2f9f0e787e9cf7ebfa770c132e0df735c85e925392cc8cc399e1a697a0badbfd 
