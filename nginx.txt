nginx定义403  要在 server里面加上 error_page  403 /403.html;
nginx 将403 ip 返回在403界面 要在location里面加上
        location  /403.html {
                default_type text/html;
                add_header Content-Type 'text/html; charset=utf-8';
                return 200   "<html> <head><title>403 Forbidden</title></head> <body> <center><h1>403 Forbidden</h1></center> <center><h1>powered by rice</h1></center> <hr><center>client_ip:$remote_addr</center> </body> </html>";
        #        allow   all;
                        }
然后重载nginx即可


ngixn 优化
1.屏蔽nginx版本号
在http 字段添加
server_tokens off;
然后重载nginx即可

#nginx 防御部分攻击 有特征
#括号内容是URI参数 
if ($args ~* mynameis=ddos) {
return 444;
}
然后重载nginx即可

#限制访问某些目录 在server字段里面添加 重载
if ($uri ~* api) {
return 444;
}

#限制ip访问 允许ip访问 在server字段添加
allow 127.0.0.1;
deny 192.168.31.85;
deny all;

# nginx限制请求频率 请求次数
http {

# limit_req_zone: 定义了一个名为mylimit的内存区域，大小为10MB，允许的请求速率为每秒2个请求。
# zone=mylimit:10m: mylimit是定义的内存区域的名称，后面跟着内存区域的大小，这里是10MB。
# rate=2r/s: rate指定了允许的请求速率，这里是每秒2个请求。
# limit_req: 指定使用mylimit区域来限制请求的频率。
# 这个配置将导致如果某个IP地址尝试超过每秒2个请求的频率，Nginx将返回状态码503，表示服务不可用。
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=2r/s;
 
    server {
        location / {
            limit_req zone=mylimit;
            proxy_pass http://backend;
        }
    }
}


